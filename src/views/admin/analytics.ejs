<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        :root {
            --primary-color: #1f2937;
            --secondary-color: #3b82f6;
            --success-color: #10b981;
            --warning-color: #f59e0b;
            --danger-color: #ef4444;
            --border-color: #e5e7eb;
            --text-color: #1f2937;
            --text-muted: #6b7280;
            --bg-color: #f9fafb;
            --card-bg: white;
            --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            --border-radius: 8px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--bg-color);
            color: var(--text-color);
        }

        .header {
            background: white;
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header h1 {
            font-size: 1.5rem;
            font-weight: 600;
        }

        .header-actions {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .nav {
            background: white;
            border-bottom: 1px solid var(--border-color);
            padding: 0 2rem;
        }

        .nav ul {
            list-style: none;
            display: flex;
            gap: 2rem;
        }

        .nav a {
            display: block;
            padding: 1rem 0;
            color: var(--text-muted);
            text-decoration: none;
            border-bottom: 2px solid transparent;
            transition: all 0.2s;
        }

        .nav a:hover,
        .nav a.active {
            color: var(--secondary-color);
            border-bottom-color: var(--secondary-color);
        }

        .main {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: var(--card-bg);
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
        }

        .stat-card h3 {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--text-muted);
            margin-bottom: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 0.025em;
        }

        .stat-card .number {
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-color);
            margin-bottom: 0.5rem;
        }

        .stat-card .trend {
            font-size: 0.875rem;
            color: var(--success-color);
        }

        .chart-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .card {
            background: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .card-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }

        .card-header h2 {
            font-size: 1.125rem;
            font-weight: 600;
        }

        .card-content {
            padding: 1.5rem;
        }

        .chart-placeholder {
            height: 300px;
            background: var(--bg-color);
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-muted);
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th,
        .table td {
            padding: 0.75rem;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        .table th {
            font-weight: 600;
            color: var(--text-muted);
            font-size: 0.875rem;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: var(--bg-color);
            border-radius: 4px;
            overflow: hidden;
            margin-top: 0.5rem;
        }

        .progress-fill {
            height: 100%;
            background: var(--secondary-color);
            border-radius: 4px;
        }

        .text-muted {
            color: var(--text-muted);
        }

        .text-sm {
            font-size: 0.875rem;
        }

        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 4px;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            transition: all 0.2s;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }

        @media (max-width: 768px) {
            .chart-grid {
                grid-template-columns: 1fr;
            }
            
            .main {
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <h1>Analytics & Reports</h1>
        <div class="header-actions">
            <span class="text-muted">Welcome, <%= adminUsername %></span>
            <form method="POST" action="/admin/logout" style="display: inline;">
                <button type="submit" class="btn btn-sm" style="background: var(--text-muted); color: white;">Logout</button>
            </form>
        </div>
    </header>

    <nav class="nav">
        <ul>
            <li><a href="/admin/dashboard">Dashboard</a></li>
            <li><a href="/admin/users">Users</a></li>
            <li><a href="/admin/network">Network</a></li>
            <li><a href="/admin/analytics" class="active">Analytics</a></li>
            <li><a href="/admin/logs">Logs</a></li>
            <li><a href="/admin/settings">Settings</a></li>
        </ul>
    </nav>

    <main class="main">
        <div class="stats-grid">
            <div class="stat-card">
                <h3>Total Registrations</h3>
                <div class="number"><%= analytics?.totalRegistrations || 0 %></div>
                <div class="trend">â†‘ <%= analytics?.registrationsGrowth || 0 %>% this week</div>
            </div>
            <div class="stat-card">
                <h3>Daily Active Users</h3>
                <div class="number"><%= analytics?.dailyActiveUsers || 0 %></div>
                <div class="trend">Average: <%= analytics?.avgDailyUsers || 0 %></div>
            </div>
            <div class="stat-card">
                <h3>Average Session Duration</h3>
                <div class="number"><%= analytics?.avgSessionDuration || '0' %> min</div>
                <div class="trend">Peak: <%= analytics?.peakHour || 'N/A' %></div>
            </div>
            <div class="stat-card">
                <h3>Device Types</h3>
                <div class="number"><%= analytics?.uniqueDevices || 0 %></div>
                <div class="trend">Unique devices this month</div>
            </div>
        </div>

        <div class="chart-grid">
            <div class="card">
                <div class="card-header">
                    <h2>Registration Trends (Last 30 Days)</h2>
                </div>
                <div class="card-content">
                    <div class="chart-placeholder">
                        <canvas id="registrationChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h2>Peak Usage Hours</h2>
                </div>
                <div class="card-content">
                    <div class="chart-placeholder">
                        <canvas id="usageChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="card" style="margin-bottom: 2rem;">
            <div class="card-header">
                <h2>Squadron Distribution</h2>
            </div>
            <div class="card-content">
                <% if (analytics?.squadronDistribution && analytics.squadronDistribution.length > 0) { %>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Squadron</th>
                                <th>Users</th>
                                <th>Percentage</th>
                                <th>Activity</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% 
                            const totalUsers = analytics.squadronDistribution.reduce((sum, sq) => sum + (sq.count || 0), 0);
                            analytics.squadronDistribution.forEach(squadron => { 
                                const percentage = totalUsers > 0 ? ((squadron.count / totalUsers) * 100).toFixed(1) : 0;
                            %>
                                <tr>
                                    <td><strong><%= squadron.squadron %></strong></td>
                                    <td><%= squadron.count %></td>
                                    <td>
                                        <div><%= percentage %>%</div>
                                        <div class="progress-bar">
                                            <div class="progress-fill" style="width: <%= percentage %>%"></div>
                                        </div>
                                    </td>
                                    <td class="text-sm text-muted">
                                        Last active: <%= squadron.lastActive ? new Date(squadron.lastActive).toLocaleDateString() : 'N/A' %>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                <% } else { %>
                    <p class="text-muted">No squadron data available yet.</p>
                <% } %>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h2>Recent Activity Summary</h2>
            </div>
            <div class="card-content">
                <div style="display: grid; gap: 1rem;">
                    <div style="padding: 1rem; background: var(--bg-color); border-radius: 4px;">
                        <div style="display: flex; justify-content: space-between; align-items: center;">
                            <div>
                                <div class="text-muted text-sm">New Users Today</div>
                                <div style="font-size: 1.25rem; font-weight: 600;"><%= analytics?.newUsersToday || 0 %></div>
                            </div>
                            <div style="text-align: right;">
                                <div class="text-muted text-sm">Yesterday</div>
                                <div><%= analytics?.newUsersYesterday || 0 %></div>
                            </div>
                        </div>
                    </div>
                    <div style="padding: 1rem; background: var(--bg-color); border-radius: 4px;">
                        <div style="display: flex; justify-content: space-between; align-items: center;">
                            <div>
                                <div class="text-muted text-sm">Active Sessions</div>
                                <div style="font-size: 1.25rem; font-weight: 600;"><%= analytics?.activeSessions || 0 %></div>
                            </div>
                            <div style="text-align: right;">
                                <div class="text-muted text-sm">Peak Today</div>
                                <div><%= analytics?.peakSessionsToday || 0 %></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        // Simple chart rendering with canvas
        function drawLineChart(canvasId, data, labels) {
            const canvas = document.getElementById(canvasId);
            if (!canvas) return;
            
            const ctx = canvas.getContext('2d');
            const width = canvas.width;
            const height = canvas.height;
            const padding = 40;
            
            // Clear canvas
            ctx.clearRect(0, 0, width, height);
            
            // Draw axes
            ctx.strokeStyle = '#e5e7eb';
            ctx.lineWidth = 1;
            ctx.beginPath();
            ctx.moveTo(padding, padding);
            ctx.lineTo(padding, height - padding);
            ctx.lineTo(width - padding, height - padding);
            ctx.stroke();
            
            // Draw grid lines
            ctx.strokeStyle = '#f3f4f6';
            for (let i = 0; i < 5; i++) {
                const y = padding + (height - 2 * padding) * i / 4;
                ctx.beginPath();
                ctx.moveTo(padding, y);
                ctx.lineTo(width - padding, y);
                ctx.stroke();
            }
            
            // Draw data
            if (data && data.length > 0) {
                const maxValue = Math.max(...data);
                const xStep = (width - 2 * padding) / (data.length - 1);
                const yScale = (height - 2 * padding) / maxValue;
                
                ctx.strokeStyle = '#3b82f6';
                ctx.lineWidth = 2;
                ctx.beginPath();
                
                data.forEach((value, index) => {
                    const x = padding + index * xStep;
                    const y = height - padding - value * yScale;
                    
                    if (index === 0) {
                        ctx.moveTo(x, y);
                    } else {
                        ctx.lineTo(x, y);
                    }
                });
                
                ctx.stroke();
                
                // Draw points
                ctx.fillStyle = '#3b82f6';
                data.forEach((value, index) => {
                    const x = padding + index * xStep;
                    const y = height - padding - value * yScale;
                    
                    ctx.beginPath();
                    ctx.arc(x, y, 3, 0, 2 * Math.PI);
                    ctx.fill();
                });
            }
        }

        // Sample data for charts
        const registrationData = [12, 19, 15, 25, 22, 30, 28, 35, 32, 40, 38, 45];
        const usageData = [5, 8, 12, 18, 25, 30, 35, 40, 38, 32, 25, 15];
        
        drawLineChart('registrationChart', registrationData);
        drawLineChart('usageChart', usageData);
    </script>
</body>
</html>